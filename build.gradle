buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id "com.github.breadmoirai.github-release" version "2.4.1"
}

apply plugin: 'org.spongepowered.mixin'


group = 'io.github.singlerr'
version = '1.6'

java {
    archivesBaseName = 'ChiselOptifineBridge'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg '-torg.spongepowered.asm.launch.MixinTweaker'
            mods {
                chiseloptifinebridge {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            arg '-torg.spongepowered.asm.launch.MixinTweaker'

            mods {
                chiseloptifinebridge {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    flatDir {
        dir 'libs'
    }
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

processResources{
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property "version", project.version
    inputs.property "mcversion", '1.12.2'

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'mod_id': 'chiseloptifinebridge', 'mod_name': 'ChiselOptifineBridge', 'version': project.version,
                'mcversion': '1.12.2', 'mod_description': 'A simple coremod that fixes SEUS shader error with chisels and bits',
                'mod_author': 'singlerr'
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly fg.deobf('mods.chiselsandbits:chiselsandbits:14.29')
    compileOnly fg.deobf('mods.flatcoloredblocks:flatcoloredblocks:mc1.12-6.8')

    compileOnly files("libs/OptiFine_1.12.2_HD_U_G5-dev.jar")

    annotationProcessor 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'
    embed('org.spongepowered:mixin:0.8.3-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }
}

mixin {
    add sourceSets.main, 'mixins.cob.json'
    config 'mixins.config.cob.json'
}

jar {
    from {
        configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }

    manifest {
        attributes([
                "Specification-Title"     : "chiseloptifinebridge",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "ForceLoadAsMod": "true",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": "0",
                /*
                "FMLCorePluginContainsFMLMod": "*",
                "FMLCorePlugin"              : "io.github.singlerr.chiseloptifinebridge.patcher.FMLCorePlugin",
                         */
                "Author"                  : "Singlerr"
        ])
    }
}


jar.finalizedBy('reobfJar')
tasks.register("copyToMod") {
    doLast {
        def file = file("build/libs/${project.name}-${version}.jar")
        def modFile = new File("C:\\Users\\Singlerr\\AppData\\Roaming\\.minecraft\\mods\\${file.name}")

        if (modFile.exists())
            modFile.delete()

        def inputStream = new FileInputStream(file)

        def outputStream = new FileOutputStream(modFile)

        int len
        byte[] buf = new byte[4096]

        while ((len = inputStream.read(buf)) != -1)
            outputStream.write(buf, 0, len)

        inputStream.close()
        outputStream.close()

        println "Successfully copied from ${file.path} to ${modFile.path}"
    }
}

tasks.named("build") {
    finalizedBy("copyToMod")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

githubRelease {
    token System.getenv("githubToken").toString()
    owner "Singlerr"
    repo "ChiselOptifineBridge"
    tagName version.toString()
    targetCommitish "master"
    releaseName "v${version.toString()}"
    generateReleaseNotes true
    body "Migrating from accessing directly to source to mixin for better manipulating minecraft source"
    releaseAssets jar.destinationDir.listFiles()
    overwrite true
    allowUploadToExisting.set true
}